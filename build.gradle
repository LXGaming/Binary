plugins {
    id "net.kyori.blossom" version "1.2.0" apply false
}

subprojects {
    apply plugin: "java"
    apply plugin: "maven-publish"
    apply plugin: "signing"

    group = "io.github.lxgaming"

    repositories {
        mavenCentral()
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots"
        }
    }

    dependencies {
        testImplementation("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    }

    java {
        withJavadocJar()
        withSourcesJar()
    }

    javadoc {
        failOnError = false
    }

    publishing {
        publications {
            mavenPublication(MavenPublication) {
                from components.java
                groupId group
                artifactId archivesBaseName
                version version
                pom {
                    name = "Binary"
                    description = "Binary Serialization Utility"
                    url = "https://github.com/LXGaming/Binary"
                    developers {
                        developer {
                            id = "lxgaming"
                            name = "LXGaming"
                        }
                    }
                    issueManagement {
                        system = "GitHub Issues"
                        url = "https://github.com/LXGaming/Binary/issues"
                    }
                    licenses {
                        license {
                            name = "The Apache License, Version 2.0"
                            url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                        }
                    }
                    scm {
                        connection = "scm:git@github.com:LXGaming/Binary.git"
                        developerConnection = "scm:git@github.com:LXGaming/Binary.git"
                        url = "https://github.com/LXGaming/Binary"
                    }
                }
            }
        }
        repositories {
            if (project.hasProperty("sonatype.username") && project.hasProperty("sonatype.password")) {
                maven {
                    name = "sonatype"
                    url = version.contains("-SNAPSHOT") ? "https://s01.oss.sonatype.org/content/repositories/snapshots" : "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2"
                    credentials {
                        username project.property("sonatype.username")
                        password project.property("sonatype.password")
                    }
                }
            }
        }
    }

    signing {
        sign publishing.publications
    }

    test {
        testLogging {
            exceptionFormat = "full"
        }

        useJUnitPlatform()
    }
}